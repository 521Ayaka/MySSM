<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
               ">

    <!-- 目标对象 -->
    <bean id="target" class="com.ganga.aop.Target"/>

    <!-- 切面对象 -->
    <bean id="myAdvice" class="com.ganga.aop.MyAdvice"/>

    <!-- 配置织入 -->
    <aop:config>
        <!-- 声明切面 -->
        <aop:aspect ref="myAdvice">
            <!-- 配置切面 ——> 切面Aspect: 通知Advice + 切点pointcut  -->
            <aop:before method="before" pointcut="execution(public void com.ganga.aop.Target.sell1())"/>
            <aop:after-returning method="afterReturning" pointcut="execution(public void com.ganga.aop.Target.sell1())"/>

            <!-- 切点表达式: 任意返回值, com.ganga.aop包下的 Target类 的参数是String和int的sell2方法 -->
            <aop:before method="before" pointcut="execution(* com.ganga.aop.Target.sell2(String,int))"/>
            <!-- 切点表达式: 任意返回值, com.ganga.aop及其以下的包 中的 任意类 的参数是任意的sell3方法 -->
            <aop:before method="before" pointcut="execution(* com.ganga.aop..*.sell3(..))"/>

            <!-- 切点表达式的抽取 -->
            <aop:pointcut id="pointcutSell3" expression="execution(* com.ganga.aop..*.sell3(..))"/>

            <!-- 通知的类型: 环绕通知 -->
            <aop:around method="around" pointcut-ref="pointcutSell3"/>
            <!-- 抛出异常通知 -->
            <aop:after-throwing method="throwing" pointcut-ref="pointcutSell3"/>
            <!-- 最终增强 -->
            <aop:after method="after" pointcut-ref="pointcutSell3"/>


        </aop:aspect>
    </aop:config>

    <!--
        pointcut="execution()"
        切点表达式 绑定切点
        execution([修饰符] 返回值类型 包名.类名.方法名(参数列表))
            - 访问修饰符可以省略
            - 返回值类型、包名、类名、方法名可以使用 * 号 代表任意
            - 包名 与 类名之间一个点 . 代表当前包下的类， 两个点 . 表示 当前包 及其 子包 下的类
            - 参数列表可以使用两个点表示任意个数，任意类型的参数列表

    -->

</beans>